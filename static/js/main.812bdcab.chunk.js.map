{"version":3,"sources":["components/Header/Header.js","components/Body/Body.js","components/Video/Item/Item.js","components/Video/List/List.js","components/Video/Video.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","useState","keyword","setKeyword","useEffect","makeMaxResultPullDown","makeYearPullDown","makeMonthPullDown","makeDatePullDown","setPullDown","console","log","BDate","select","ba","document","getElementById","i","option","createElement","text","value","appendChild","ADate","options","selected","onChangedBDateHandler","id","onChangeBDate","onChangedADateHandler","className","TextField","label","onChange","e","target","onKeywordChanged","Button","onClick","variant","color","onChangeMR","onChangeOrder","Body","children","Item","onVideoClicked","video","src","snippet","thumbnails","medium","url","title","List","Items","videos","map","selectedVideo","key","videoId","Video","videoURL","API","App","d","Date","newTerm","setNewTerm","newMaxResults","setNewMaxResults","newOrder","setNewOrder","getFullYear","getMonth","getDate","setBDate","setADate","setVideos","setSelectedVideo","YSearch","term","maxResults","data","search","order","publishedBefore","Number","slice","publishedAfter","newBDate","newADate","BM","AM","check","MRvalue","Order","num","onChangeBDateHandler","onChangeADate","onChangeADateHandler","video_list","length","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"sUA4LeA,EAtLA,SAACC,GACd,MAA6BC,mBAAS,IAAtC,mBAAOC,EAAP,KAAeC,EAAf,KAIAC,qBAAU,WACRC,IACAC,IACAC,IACAC,IACAC,IACAC,QAAQC,IAAIX,GACZU,QAAQC,IAAIX,EAAMY,MAAM,MACxB,IAGF,IAAMN,EAAmB,WAEvB,IADA,IAAIO,EAAS,KACJC,EAAK,EAAGA,EAAK,EAAGA,IAAM,CACdD,EAAJ,IAAPC,EAAoBC,SAASC,eAAe,SACxBD,SAASC,eAAe,SAChD,IAAK,IAAIC,EAAIjB,EAAMY,MAnBT,GAmBsBK,EAAI,KAAOA,IAAM,CAC/C,IAAIC,EAASH,SAASI,cAAc,UACpCD,EAAOE,KAAOH,EACdC,EAAOG,MAAQJ,EACfJ,EAAOS,YAAYJ,MAKnBX,EAAoB,WAExB,IADA,IAAIM,EAAS,KACJC,EAAK,EAAGA,EAAK,EAAGA,IAAM,CACdD,EAAJ,IAAPC,EAAoBC,SAASC,eAAe,UACxBD,SAASC,eAAe,UAChD,IAAK,IAAIC,EAAI,EAAGA,GAAK,GAAKA,IAAM,CAC9B,IAAIC,EAASH,SAASI,cAAc,UACpCD,EAAOE,KAAOH,EACdC,EAAOG,MAAQJ,EACfJ,EAAOS,YAAYJ,MAKnBV,EAAmB,WAEvB,IADA,IAAIK,EAAS,KACJC,EAAK,EAAGA,EAAK,EAAGA,IAAM,CACdD,EAAJ,IAAPC,EAAoBC,SAASC,eAAe,SACxBD,SAASC,eAAe,SAChD,IAAK,IAAIC,EAAG,EAAIA,GAAK,GAAKA,IAAM,CAC9B,IAAIC,EAASH,SAASI,cAAc,UACpCD,EAAOE,KAAOH,EACdC,EAAOG,MAAQJ,EACfJ,EAAOS,YAAYJ,MAMnBT,EAAc,WAClBM,SAASC,eAAe,SAAUK,MAAQrB,EAAMuB,MA1DpC,GA2DZR,SAASC,eAAe,UAAUQ,QAAQxB,EAAMuB,MA1DpC,GA0DiD,GAAGE,UAAW,EAC3EV,SAASC,eAAe,SAAUQ,QAAQxB,EAAMuB,MA1DpC,GA0DgD,GAAIE,UAAW,EAE3EV,SAASC,eAAe,SAAUK,MAAQrB,EAAMY,MA9DpC,GA+DZG,SAASC,eAAe,UAAUQ,QAAQxB,EAAMY,MA9DpC,GA8DiD,GAAGa,UAAW,EAC3EV,SAASC,eAAe,SAAUQ,QAAQxB,EAAMY,MA9DpC,GA8DgD,GAAIa,UAAW,GAIvEpB,EAAwB,WAC5B,IAAK,IAAIY,EAAI,GAAIA,GAAK,GAAKA,GAAK,EAAG,CACjC,IAAIJ,EAASE,SAASC,eAAe,UACjCE,EAASH,SAASI,cAAc,UACpCD,EAAOE,KAAOH,EACdC,EAAOG,MAAQJ,EACfJ,EAAOS,YAAYJ,KAsBjBQ,EAAwB,SAACC,GAE7B,OAAQA,GACN,KAnGU,EAoGR3B,EAAM4B,cAAcD,EAAGZ,SAASC,eAAe,SAASK,OAC1D,MACA,KArGU,EAsGRrB,EAAM4B,cAAcD,EAAGZ,SAASC,eAAe,UAAUK,OAC3D,MACA,KAvGU,EAwGRrB,EAAM4B,cAAcD,EAAGZ,SAASC,eAAe,SAASK,SAKxDQ,EAAwB,SAACF,GAE7B,OAAQA,GACN,KAlHU,EAmHR3B,EAAM4B,cAAcD,EAAGZ,SAASC,eAAe,SAASK,OAC1D,MACA,KApHU,EAqHRrB,EAAM4B,cAAcD,EAAGZ,SAASC,eAAe,UAAUK,OAC3D,MACA,KAtHU,EAuHRrB,EAAM4B,cAAcD,EAAGZ,SAASC,eAAe,SAASK,SAK9D,OACE,yBAAKS,UAAU,UACb,yBAAKA,UAAU,UACb,wBAAIA,UAAU,QAAd,YACF,kBAACC,EAAA,EAAD,CACED,UAAU,YACVH,GAAG,iBACHK,MAAM,qBACNC,SAvDuB,SAACC,GAC5B/B,EAAW+B,EAAEC,OAAOd,OACpBrB,EAAMoC,iBAAiBF,EAAEC,OAAOd,QAsD5BA,MAASnB,IAEV,kBAACmC,EAAA,EAAD,CAAQP,UAAU,SAASQ,QAAStC,EAAMsC,QAASC,QAAQ,YAAYC,MAAM,aAA7E,iBAGD,yBAAKV,UAAU,MACb,iDACA,4BAAQH,GAAG,SAASM,SAzDA,WACxBjC,EAAMyC,WAAW1B,SAASC,eAAe,UAAUK,WA0DjD,iCACE,yEACE,yBAAKS,UAAU,WACb,uDACA,4BAAQH,GAAG,QAAQM,SA1DA,WAC3BjC,EAAM0C,cAAc3B,SAASC,eAAe,SAASK,SA0D3C,4BAAQA,MAAM,aAAd,oCACA,4BAAQA,MAAM,UAAd,4BACA,4BAAQA,MAAM,QAAd,0DACA,4BAAQA,MAAM,SAAd,oDACA,4BAAQA,MAAM,aAAd,oCAGJ,yBAAKS,UAAU,SACb,wDAEF,yBAAKA,UAAU,UACX,4BAAQH,GAAG,QAAQM,SAAU,SAACN,GAAD,OAAQD,EAhKnC,MAiKF,qCACA,4BAAQC,GAAG,SAASM,SAAU,SAACN,GAAD,OAAQD,EAjKpC,MAkKF,qCACA,4BAAQC,GAAG,QAAQM,SAAU,SAACN,GAAD,OAAQD,EAlKnC,MAmKF,kDAEJ,yBAAKI,UAAU,SACb,4BAAQH,GAAG,QAAQM,SAAU,SAACN,GAAD,OAAQE,EAxKjC,MAyKJ,qCACA,4BAAQF,GAAG,SAASM,SAAU,SAACN,GAAD,OAAQE,EAzKlC,MA0KJ,qCACA,4BAAQF,GAAG,QAAQM,SAAU,SAACN,GAAD,OAAQE,EA1KjC,MA2KJ,qDC1KGc,EATF,SAAC3C,GACZ,OACI,6BACGA,EAAM4C,WCcAC,G,MAfF,SAAC7C,GACZ,OACE,wBAAI8B,UAAU,OAAOQ,QAAS,kBAAMtC,EAAM8C,eAAe9C,EAAM+C,SAC7D,yBAAKjB,UAAU,WACb,yBAAKA,UAAU,UACb,yBAAKkB,IAAKhD,EAAM+C,MAAME,QAAQC,WAAWC,OAAOC,OAElD,yBAAKtB,UAAU,QACb,4BAAK9B,EAAM+C,MAAME,QAAQI,YCUpBC,G,MAlBF,SAACtD,GACZ,IAAMuD,EAAQvD,EAAMwD,OAAOC,KAAI,SAACV,GAC9B,OAAI/C,EAAM0D,gBAAkBX,GAClB,kBAAC,EAAD,CACRA,MAAOA,EAAOY,IAAKZ,EAAMpB,GAAGiC,QAC5Bd,eAAgB9C,EAAM8C,oBAM1B,OACE,wBAAIhB,UAAU,QACXyB,KCeQM,G,MA7BD,SAAC7D,GAEb,IAAKA,EAAM+C,MACT,OACI,yBAAKjB,UAAU,eACb,yBAAKA,UAAU,UAAf,eAKR,IAAMgC,EAAW,iCAAmC9D,EAAM+C,MAAMpB,GAAGiC,QACnE,OACE,yBAAK9B,UAAU,SACX,yBAAKA,UAAU,UACb,yBAAKA,UAAU,2CACf,4BACAA,UAAU,wBACVkB,IAAKc,EACLT,MAAM,oBAIV,yBAAKvB,UAAU,QACb,4BAAK9B,EAAM+C,MAAME,QAAQI,W,iBCnB3BU,EAAM,0CAuHGC,EArHH,WACV,IAAMC,EAAI,IAAIC,KACd,EAA6BjE,mBAAS,IAAtC,mBAAOkE,EAAP,KAAeC,EAAf,KACA,EAAyCnE,mBAAS,IAAlD,mBAAOoE,EAAP,KAAqBC,EAArB,KACA,EAA+BrE,mBAAS,aAAxC,mBAAOsE,EAAP,KAAgBC,EAAhB,KACA,EAAyBvE,mBAAS,CAACgE,EAAEQ,cAAcR,EAAES,WAAW,EAAET,EAAEU,YAApE,mBAAO/D,EAAP,KAAagE,EAAb,KACA,EAAyB3E,mBAAS,CAACgE,EAAEQ,cAAc,EAAER,EAAES,WAAW,EAAET,EAAEU,YAAtE,mBAAOpD,EAAP,KAAasD,EAAb,KACA,EAA2B5E,mBAAS,IAApC,mBAAOuD,EAAP,KAAcsB,EAAd,KACA,EAAyC7E,mBAAS,MAAlD,mBAAOyD,EAAP,KAAqBqB,EAArB,KACA3E,qBAAU,WACN4E,IAAQ,CAACrB,IAAII,EAAIkB,KAAM,2BAAOC,WAAW,KAAK,SAACC,GAC7CL,EAAUK,GACVJ,EAAiBI,EAAK,OAExBzE,QAAQC,IAAI,iBACZyD,EAAW,+BACb,IAMF,IAsDMgB,EAAS,WAEG,KAAZjB,GAAiBC,EAAW,6BAChCY,IAAQ,CAAErB,IAAKI,EACbkB,KAAMd,EACNe,WAAWb,EACXgB,MAAMd,EACNe,gBAAgB,GAAD,OAAIC,OAAO3E,EAAM,IAAjB,YAAwB2E,QAAQ,IAAM3E,EAAM,IAAI4E,OAAO,IAAvD,YAA8DD,QAAQ,IAAM3E,EAAM,IAAI4E,OAAO,IAA7F,cACfC,eAAe,GAAD,OAAIF,OAAOhE,EAAM,IAAjB,YAAwBgE,QAAQ,IAAMhE,EAAM,IAAIiE,OAAO,IAAvD,YAA8DD,QAAQ,IAAMhE,EAAM,IAAIiE,OAAO,IAA7F,gBAEf,SAACL,GACAL,EAAUK,GACVJ,EAAiBI,EAAK,QAI1B,OACE,yBAAKrD,UAAY,OACf,kBAAC,EAAD,CACEM,iBAtE0B,SAAClC,GAAakE,EAAW,4BAAUlE,IAuE7DoC,QAAS,kBAjDD,WACZ,IAAIoD,EAAW9E,EACX+E,EAAWpE,EACTqE,EAAKF,EAAS,GACdG,EAAKF,EAAS,GACT,IAAPC,GAAmB,IAAPA,GAAmB,IAAPA,GAAmB,IAAPA,GAAmB,IAAPA,GAAmB,KAAPA,GAAoB,KAAPA,GACvD,KAAhBF,EAAS,KAAYA,EAAS,GAAK,IAE9B,IAAPG,GAAmB,IAAPA,GAAmB,IAAPA,GAAmB,IAAPA,GAAmB,IAAPA,GAAmB,KAAPA,GAAoB,KAAPA,GACvD,KAAhBF,EAAS,KAAYA,EAAS,GAAK,IAG9B,IAAPC,GAAaF,EAAS,GAAK,KAExBA,EAAS,GAAG,IAAM,GAAOA,EAAS,GAAG,MAAQ,GAAOA,EAAS,GAAG,MAAQ,EAAKA,EAAS,GAAK,GAC3FA,EAAS,GAAK,IAEV,IAAPG,GAAaF,EAAS,GAAK,KAExBA,EAAS,GAAG,IAAM,GAAOA,EAAS,GAAG,MAAQ,GAAOA,EAAS,GAAG,MAAQ,EAAKA,EAAS,GAAK,GAC3FA,EAAS,GAAK,IAGrBf,EAASc,GACTb,EAASc,GACTP,IAwBmBU,IACfrD,WArE6B,SAACsD,GAAazB,EAAiByB,IAsE5DrD,cAnEwB,SAACsD,GAAWxB,EAAYwB,IAoEhDpF,MAAOA,EACPW,MAAOA,EACPK,cAAiB,SAACD,EAAGsE,GAAJ,OAnEM,SAACtE,EAAGsE,GAC/B,IAAIP,EAAW9E,EACf8E,EAAS/D,GAAMsE,EACfrB,EAASc,GAgEwBQ,CAAqBvE,EAAGsE,IACrDE,cAAiB,SAACxE,EAAGsE,GAAJ,OA9DM,SAACtE,EAAGsE,GAC/B,IAAIN,EAAWpE,EACfoE,EAAShE,GAAMsE,EACfpB,EAASc,GA2DwBS,CAAqBzE,EAAGsE,MAEvD,kBAAC,EAAD,KACE,kBAAC,EAAD,CAAOlD,MAAOW,EAAe2C,WAAY7C,EAAO8C,SAChD,kBAAC,EAAD,CACE9C,OAAQA,EACRV,eAtFsB,SAACC,GAAWgC,EAAiBhC,IAuFnDW,cAAeA,OC1GL6C,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAAS9F,SAASC,eAAe,SD6H3C,kBAAmB8F,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.812bdcab.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport './Header.css';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\n//props -> App.jsのデータを取ってきてる?\r\nconst Header = (props) => {\r\n  const [keyword,setKeyword] = useState('')//検索キーワード\r\n  const year  = 0\r\n  const month = 1\r\n  const date  = 2\r\n  useEffect(() => {\r\n    makeMaxResultPullDown()\r\n    makeYearPullDown()\r\n    makeMonthPullDown()\r\n    makeDatePullDown()\r\n    setPullDown()\r\n    console.log(props);\r\n    console.log(props.BDate[0]);\r\n  },[])\r\n\r\n// プルダウンを作る\r\n  const makeYearPullDown = () => {\r\n    var select = null;\r\n    for (let ba = 0; ba < 2; ba++) {\r\n      if (ba === 0) {select = document.getElementById(\"BYear\");}\r\n      else          {select = document.getElementById(\"AYear\");}\r\n      for (var i = props.BDate[year]; i > 2004 ; i --) {\r\n        var option = document.createElement(\"option\");\r\n        option.text = i\r\n        option.value = i\r\n        select.appendChild(option)\r\n      }\r\n    }\r\n  }\r\n\r\n  const makeMonthPullDown = () => {\r\n    var select = null;\r\n    for (let ba = 0; ba < 2; ba++) {\r\n      if (ba === 0) {select = document.getElementById(\"BMonth\");}\r\n      else          {select = document.getElementById(\"AMonth\");}\r\n      for (var i = 1; i <= 12 ; i ++) {\r\n        var option = document.createElement(\"option\");\r\n        option.text = i\r\n        option.value = i\r\n        select.appendChild(option)\r\n      }\r\n    }\r\n  }\r\n\r\n  const makeDatePullDown = () => {\r\n    var select = null;\r\n    for (let ba = 0; ba < 2; ba++) {\r\n      if (ba === 0) {select = document.getElementById(\"BDate\");}\r\n      else          {select = document.getElementById(\"ADate\");}\r\n      for (var i =1 ; i <= 31 ; i ++) {\r\n        var option = document.createElement(\"option\");\r\n        option.text = i\r\n        option.value = i\r\n        select.appendChild(option)\r\n      }\r\n    }\r\n  }\r\n\r\n//日付のプルダウンを作る\r\n  const setPullDown = () => {\r\n    document.getElementById(\"AYear\" ).value = props.ADate[year]\r\n    document.getElementById(\"AMonth\").options[props.ADate[month]-1].selected = true\r\n    document.getElementById(\"ADate\" ).options[props.ADate[date]-1 ].selected = true\r\n\r\n    document.getElementById(\"BYear\" ).value = props.BDate[year]\r\n    document.getElementById(\"BMonth\").options[props.BDate[month]-1].selected = true\r\n    document.getElementById(\"BDate\" ).options[props.BDate[date]-1 ].selected = true\r\n  }\r\n\r\n// 最大結果数のプルダウンを作る\r\n  const makeMaxResultPullDown = () => {\r\n    for (var i = 10; i <= 50 ; i += 5) {\r\n      var select = document.getElementById(\"MRsize\");\r\n      var option = document.createElement(\"option\");\r\n      option.text = i\r\n      option.value = i\r\n      select.appendChild(option)\r\n    }\r\n  }\r\n\r\n   //入力欄の文字を受け取る\r\n  const onInputChangeHandler = (e) => {\r\n    setKeyword(e.target.value)\r\n    props.onKeywordChanged(e.target.value) //親のApp.jsにわたす\r\n  }\r\n\r\n  //maxResultの変更を受け取る\r\n  const onChangedMRHandler =() => {\r\n    props.onChangeMR(document.getElementById(\"MRsize\").value)\r\n  }\r\n\r\n  //並び替えの変更\r\n  const onChangedOrderHandler =() => {\r\n    props.onChangeOrder(document.getElementById(\"Order\").value)\r\n  }\r\n\r\n  //検索はじめの日付の変更\r\n  //idによって変更する部分を分岐\r\n  const onChangedBDateHandler = (id) => {\r\n    // eslint-disable-next-line default-case\r\n    switch (id) {\r\n      case year:\r\n        props.onChangeBDate(id,document.getElementById(\"BYear\").value) \r\n      break;\r\n      case month:\r\n        props.onChangeBDate(id,document.getElementById(\"BMonth\").value)\r\n      break;\r\n      case date:\r\n        props.onChangeBDate(id,document.getElementById(\"BDate\").value)\r\n      break;\r\n    }\r\n  }\r\n\r\n  const onChangedADateHandler = (id) => {\r\n    // eslint-disable-next-line default-case\r\n    switch (id) {\r\n      case year:\r\n        props.onChangeBDate(id,document.getElementById(\"AYear\").value) \r\n      break;\r\n      case month:\r\n        props.onChangeBDate(id,document.getElementById(\"AMonth\").value)\r\n      break;\r\n      case date:\r\n        props.onChangeBDate(id,document.getElementById(\"ADate\").value)\r\n      break;\r\n    }\r\n  }\r\n\r\n  return(\r\n    <div className=\"Header\">\r\n      <div className=\"search\">\r\n        <h1 className=\"logo\">YukuTube</h1>\r\n      <TextField\r\n        className=\"TextField\"\r\n        id=\"standard-basic\"\r\n        label=\"検索枠\"\r\n        onChange = {onInputChangeHandler}\r\n        value = {keyword}\r\n         />\r\n       <Button className=\"Button\" onClick={props.onClick} variant=\"contained\" color=\"secondary\">検索</Button>\r\n\r\n      </div>\r\n      <div className=\"MR\">\r\n        <p>表示数</p>\r\n        <select id=\"MRsize\" onChange={onChangedMRHandler}></select>\r\n      </div>\r\n      <details>\r\n        <summary>もっと細かく</summary>\r\n          <div className=\"Sorting\">\r\n            <p>並び替え</p>\r\n            <select id=\"Order\" onChange={onChangedOrderHandler}>\r\n              <option value=\"relevance\">関連順(標準)</option>\r\n              <option value=\"rating\">高評価順</option>\r\n              <option value=\"date\">最近アップされた順</option>\r\n              <option value=\"title\">アルファベット順</option>\r\n              <option value=\"viewCount\">再生回数順</option>\r\n            </select>\r\n          </div>\r\n          <div className=\"label\">\r\n            <p>日時指定</p>\r\n          </div>\r\n          <div className=\"Before\">\r\n              <select id=\"BYear\" onChange={(id) => onChangedBDateHandler(year)}></select>\r\n              <p>年</p>\r\n              <select id=\"BMonth\" onChange={(id) => onChangedBDateHandler(month)}></select>\r\n              <p>月</p>\r\n              <select id=\"BDate\" onChange={(id) => onChangedBDateHandler(date)}></select>\r\n              <p>日から</p>\r\n          </div>\r\n          <div className=\"After\">\r\n            <select id=\"AYear\" onChange={(id) => onChangedADateHandler(year)}></select>\r\n            <p>年</p>\r\n            <select id=\"AMonth\" onChange={(id) => onChangedADateHandler(month)}></select>\r\n            <p>月</p>\r\n            <select id=\"ADate\" onChange={(id) => onChangedADateHandler(date)}></select>\r\n            <p>日まで</p>\r\n          </div>\r\n      </details>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\n\r\nconst Body = (props) => {\r\n  return (\r\n      <div>\r\n        {props.children}\r\n      </div>\r\n\r\n  )\r\n}\r\n\r\nexport default Body;\r\n// <div className=\"container\">\r\n//   <div className=\"row\">\r\n//     {props.children}\r\n//   </div>\r\n// </div>\r\n","/* eslint-disable jsx-a11y/alt-text */\r\nimport React from 'react';\r\nimport './Item.css';\r\n\r\nconst Item = (props) => {\r\n  return(\r\n    <li className=\"list\" onClick={() => props.onVideoClicked(props.video)}>\r\n      <div className=\"oneItem\">\r\n        <div className=\"images\">\r\n          <img src={props.video.snippet.thumbnails.medium.url}/>\r\n        </div>\r\n        <div className=\"info\">\r\n          <h5>{props.video.snippet.title}</h5>\r\n        </div>\r\n    </div>\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default Item\r\n","import React from 'react';\r\nimport Item from '../Item/Item';\r\nimport './List.css'\r\n\r\nconst List = (props) => {\r\n  const Items = props.videos.map((video) => {\r\n    if (props.selectedVideo !== video) {\r\n      return (<Item\r\n      video={video} key={video.id.videoId}\r\n      onVideoClicked={props.onVideoClicked}\r\n      />\r\n      )\r\n    }\r\n    return false;\r\n  })\r\n  return (\r\n    <ul className=\"List\">\r\n      {Items}\r\n    </ul>\r\n  )\r\n}\r\n\r\nexport default List;\r\n","import React from 'react';\r\nimport './Video.css'\r\n\r\nconst Video = (props) => {\r\n  //読み込み中の処理\r\n  if (!props.video) {\r\n    return(\r\n        <div className=\"loader-wrap\">\r\n          <div className=\"loader\">Loading...</div>\r\n        </div>\r\n    )\r\n  }\r\n  // 読み込み完了後の処理\r\n  const videoURL = 'https://www.youtube.com/embed/' + props.video.id.videoId;\r\n  return(\r\n    <div className=\"Video\">\r\n        <div className=\"Player\">\r\n          <div className=\"embed-responsive embed-responsive-16by9\" >\r\n          <iframe\r\n          className=\"embed-responsive-item\"\r\n          src={videoURL}\r\n          title=\"selectedVideo\"\r\n          />\r\n          </div>\r\n      </div>\r\n      <div className=\"info\">\r\n        <h2>{props.video.snippet.title}</h2>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Video;\r\n","import React, {useState, useEffect} from 'react';\r\nimport Header from './components/Header/Header'\r\nimport Body from './components/Body/Body'\r\n// import Item from './components/Video/Item/Item'\r\nimport List from './components/Video/List/List'\r\nimport Video from './components/Video/Video'\r\nimport YSearch from 'youtube-api-search';\r\nconst API = 'AIzaSyC6GuqIlneXBe1VhyzK-_rxJ3e_ELfuNVU'\r\n\r\nconst App = () => {\r\n  const d = new Date()\r\n  const [newTerm,setNewTerm] = useState(\"\") //検索キーワード\r\n  const [newMaxResults,setNewMaxResults] = useState(10) //最大表示数\r\n  const [newOrder,setNewOrder] = useState(\"relevance\") //並び方\r\n  const [BDate,setBDate] = useState([d.getFullYear(),d.getMonth()+1,d.getDate()]) //検索範囲はじめ\r\n  const [ADate,setADate] = useState([d.getFullYear()-5,d.getMonth()+1,d.getDate()]) //検索範囲終わり\r\n  const [videos,setVideos] = useState([]) //取ってきたビデオ達\r\n  const [selectedVideo,setSelectedVideo] = useState(null) //選んだビデオ(すぐ再生できるビデオ)\r\n  useEffect(() => {\r\n      YSearch({key:API,term: 'ゆっくり',maxResults:10}, (data) => {\r\n        setVideos(data)\r\n        setSelectedVideo(data[0])\r\n      })\r\n      console.log(\"mount success\");\r\n      setNewTerm(\"ゆっくり \")\r\n  },[])\r\n\r\n\r\n// リストを取ってきていじってsetBDate\r\n// handler\r\n  //再生する動画変更\r\n  const onVideoClickedHandler = (video) => {setSelectedVideo(video)}\r\n\r\n  //キーワード変更\r\n  const onKeywordChangedHandler = (keyword) => {setNewTerm(\"ゆっくり \" + keyword)}\r\n\r\n  //最大表示数変更\r\n  const onChangedMaxResultsHandler = (MRvalue) => {setNewMaxResults(MRvalue)}\r\n\r\n  // 並び替え変更\r\n  const onChangedOrderHandler = (Order) => {setNewOrder(Order)}\r\n\r\n  //検索開始範囲変更\r\n  const onChangeBDateHandler = (id,num) => {\r\n    var newBDate = BDate\r\n    newBDate[id] = num\r\n    setBDate(newBDate)\r\n  }\r\n\r\n  const onChangeADateHandler = (id,num) => {\r\n    var newADate = ADate\r\n    newADate[id] = num\r\n    setADate(newADate)\r\n  }\r\n\r\n  //最終日を正す\r\n  const check = () => {\r\n    var newBDate = BDate\r\n    var newADate = ADate\r\n    const BM = newBDate[1]\r\n    const AM = newADate[1]\r\n    if (BM === 1 || BM === 3 || BM === 5 || BM === 7 || BM === 8 || BM === 10 || BM === 12) {\r\n      if (newBDate[2] === 31) {newBDate[2] = 30}\r\n    }\r\n    if (AM === 1 || AM === 3 || AM === 5 || AM === 7 || AM === 8 || AM === 10 || AM === 12) {\r\n      if (newADate[2] === 31) {newADate[2] = 30}\r\n    }\r\n    // 閏年\r\n    if (BM === 2 && (newBDate[2] > 29)) {\r\n      // eslint-disable-next-line no-mixed-operators\r\n      if ((newBDate[0]%4 === 0) && (newBDate[0]%100 !== 0) || (newBDate[0]%400 === 0)) {newBDate[2] = 29}\r\n      else newBDate[2] = 28\r\n    }\r\n    if (AM === 2 && (newADate[2] > 29)) {\r\n      // eslint-disable-next-line no-mixed-operators\r\n      if ((newADate[0]%4 === 0) && (newADate[0]%100 !== 0) || (newADate[0]%400 === 0)) {newADate[2] = 29}\r\n      else newADate[2] = 28\r\n    }\r\n    //値更新\r\n    setBDate(newBDate)\r\n    setADate(newADate)\r\n    search()\r\n  }\r\n\r\n  //検索開始\r\n  const search = () => {\r\n    //初期の検索ワード 空の時\r\n    if (newTerm === '') {setNewTerm('ゆっくり ')}\r\n    YSearch({ key: API,\r\n      term: newTerm,\r\n      maxResults:newMaxResults,\r\n      order:newOrder,\r\n      publishedBefore:`${Number(BDate[0])}-${Number(('0' + BDate[1]).slice(-2))}-${Number(('0' + BDate[2]).slice(-2))}T23:59:59Z`,\r\n      publishedAfter:`${Number(ADate[0])}-${Number(('0' + ADate[1]).slice(-2))}-${Number(('0' + ADate[2]).slice(-2))}T00:00:00Z`,\r\n    },\r\n     (data) => { //データを受け取る\r\n      setVideos(data) //動画保存\r\n      setSelectedVideo(data[0])\r\n    })\r\n  }\r\n\r\n  return(\r\n    <div className = \"App\">\r\n      <Header\r\n        onKeywordChanged={onKeywordChangedHandler}\r\n        onClick={() => check()}\r\n        onChangeMR={onChangedMaxResultsHandler}\r\n        onChangeOrder={onChangedOrderHandler}\r\n        BDate={BDate}\r\n        ADate={ADate}\r\n        onChangeBDate = {(id,num) => onChangeBDateHandler(id,num)}\r\n        onChangeADate = {(id,num) => onChangeADateHandler(id,num)}\r\n      ></Header>\r\n      <Body>\r\n        <Video video={selectedVideo} video_list={videos.length}/>\r\n        <List\r\n          videos={videos}\r\n          onVideoClicked={onVideoClickedHandler}\r\n          selectedVideo={selectedVideo}\r\n        />\r\n      </Body>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App;\r\n//タグの中では {関数名}または{()=>関数名()}\r\n// headerからappのBDate,ADateHandler受け取るように\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}